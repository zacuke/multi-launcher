name: Build with dotnet publish on Windows and Linux
  
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  
jobs:
  dotnet-publish:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
  
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
  
      # Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0

      # Publish the application
      - name: Publish the application
        working-directory: src
        run: dotnet publish --property:PublishDir=publish-output

      # Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: published-app-${{ matrix.os }}
          path: src/publish-output

  create-release:
    needs: dotnet-publish 
    runs-on: ubuntu-latest
    steps:
      # Download artifacts from the dotnet-publish job for all OSes
      - name: Download Ubuntu artifact
        uses: actions/download-artifact@v4
        with:
          name: published-app-ubuntu-latest
          path: ubuntu-artifacts
        
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: published-app-windows-latest
          path: windows-artifacts

      - name: Set datetime
        run: echo "NOW=$(date +'%Y%m%d.%H%M%S')" >> $GITHUB_ENV

      # Create a GitHub release (using the Ubuntu and Windows artifacts)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ env.NOW }}"
          release_name: Release "${{ env.NOW }}"
          draft: false
          prerelease: false
          body: |
            This release contains the build artifacts for the following operating systems:
            - Ubuntu
            - Windows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload Ubuntu artifact to the release
      - name: Upload Ubuntu artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu-artifacts/multi-launcher
          asset_name: multi-launcher
          asset_content_type: application/octet-stream

      # Upload Windows artifact to the release
      - name: Upload Windows artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows-artifacts/multi-launcher.exe
          asset_name: multi-launcher.exe
          asset_content_type: application/octet-stream